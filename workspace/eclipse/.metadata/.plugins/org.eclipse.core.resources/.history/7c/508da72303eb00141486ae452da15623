package poster;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map.Entry;

public class Dict{
	
	
	HashMap<String, Integer> lemmaCount;
	String dictFile;
	
	//////////////////////Methods//////////////////////////
	
	// Constructor
	public Dict(Options option){
		
		dictFile = option.workPath + option.dictFile;
		lemmaCount = new HashMap<String, Integer>();
	}
	
	// I/O Method
	public boolean readDict(){
		try{
			BufferedReader dictReader = new BufferedReader(new InputStreamReader(new FileInputStream(dictFile)));
			String line = dictReader.readLine();
			while (line != null){
				int flag = line.indexOf(' ');
				if (flag != -1){
					line = line.substring(0, flag);
					if (line.indexOf('_') == -1 && line.indexOf('-') == -1){          // Keep words whit high frequency;
						lemmaCount.put(line, 0);
						System.out.println(line);   // Debug;
					}
				}
				
				
				line = dictReader.readLine();
			}
			
			System.out.println("Read Dict successfully!");
			return true;
		}catch(Exception e){
			System.out.println("Error when Read Dict ..." + e.getMessage());
			e.printStackTrace();
			return false;
		}
	}
	
	public Entry<String,Integer> contains(String word){
		if (lemmaCount.containsKey(word) ){
			return (new AbstractMap.SimpleEntry<String,Integer>(word,lemmaCount.get(word) ));
		}
		return null;
	}
	
	public void update (String word, int num){
		lemmaCount.put(word, num);
	}
}